version: '3.1'

services:

  # PHP Template
  php-app:
    build: .docker/php
    container_name: php-app
    ports: 
      - "8009:80"
    volumes: 
      - ./containers/php-app:/var/www/html
    networks:
      - app 
  # node:
  #   build: ./.docker/node
  #   privileged: true
  #   container_name: node
  #   ports:
  #     - "3000:3000"
  #   networks:
  #     - app

  nginx:
    build:
      context: ./.docker/nginx
    container_name: nginx
    restart: unless-stopped
    ports:
      - "8081:80"
    volumes:  
      - ./containers/client/apps:/home/ubuntu/apps 

  node:
    build: .
    container_name: node
    ports:
      - "3000:3000" # Expose the application port
    volumes:
      - .:/app # Mount the current directory to /app inside the container
    stdin_open: true # Keep stdin open
    tty: true         # Allocate a pseudo-TTY
    networks:
    - app  
    
  mongo:
    image: mongo:5.0
    container_name: mongo
    environment:
        - MONGO_INITDB_ROOT_USERNAME=root
        - MONGO_INITDB_ROOT_PASSWORD=password
        - MONGO_INITDB_ROOT_DATABASE=lara_mongo
    restart: unless-stopped
    ports:
      - "27019:27017"
    volumes:
      - ./.docker/mgdata/db:/data/db
      - ./.docker/mgdata/dev.archive:/Databases/dev.archive
      - ./.docker/mgdata/production:/Databases/production
    networks:
    - app  

  mssql:
    image: rapidfort/microsoft-sql-server-2019-ib:latest
    container_name: sqlserver
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=yourStrong123Password
    restart: unless-stopped
    ports:
      - "1434:1433"
    volumes:
      - ./containers/sqldata_insight/data:/var/opt/mssql/data
    networks:
      - app

  mongo-express:
    image: mongo-express
    container_name: mexpress
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password
      - ME_CONFIG_MONGODB_URL=mongodb://root:password@mongo:27017/?authSource=admin
      - ME_CONFIG_BASICAUTH_USERNAME=mexpress
      - ME_CONFIG_BASICAUTH_PASSWORD=mexpress
    links:
      - mongo
    restart: unless-stopped
    ports:
      - "8091:8081"  
    networks:
    - app  

  mydb:
    build: .docker/mysql
    container_name: mydb
    command: --explicit_defaults_for_timestamp=1
    restart: always
    volumes:
      - "./.docker/mydata:/var/lib/mysql"
    environment: 
      MYSQL_ROOT_PASSWORD: A_1234567
      MYSQL_DATABASE: laravel
    ports: 
      - "3309:3306"
    networks:
      - app      

  phpmyadmin: 
    image: phpmyadmin
    container_name: myadmin
    restart: always
    environment:
      - PMA_HOST=mydb    
    ports:
      - 8089:80
    networks:
      - app    

  pgdb:
    image: postgres
    container_name: pgdb
    environment:
    - POSTGRES_USER=admin
    - POSTGRES_PASSWORD=postgres   
    - POSTGRES_DB=postgres  
    ports:
    - "5439:5432"
    volumes:
    - ./.docker/pgdata:/var/lib/postgresql/data 
    networks:
    - app      

  pgadm:
    image: dpage/pgadmin4
    container_name: pgadm
    restart: always
    environment:
    - PGADMIN_DEFAULT_EMAIL=admin@admin.com
    - PGADMIN_DEFAULT_PASSWORD=postgres
    volumes:
      - ./.docker/pgadmin:/var/lib/pgadmin
    ports:
    - "5059:80"
    networks:
    - app    

networks:
  app:
    driver: bridge